// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  avatar    String?
  phone     String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  templates CodeTemplate[]
  blogPosts BlogPost[]
  comments  Comment[]
}

model CodeTemplate {
  id          Int      @id @default(autoincrement())
  title       String
  explanation String?
  code        String
  language    String
  tags        Tag[]
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BlogPost {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  content     String
  tags        Tag[]
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  comments    Comment[]
}

model Tag {
  id              Int             @id @default(autoincrement())
  name            String          @unique
  codeTemplates   CodeTemplate[]
  blogPosts       BlogPost[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  blogPostId Int
  blogPost  BlogPost @relation(fields: [blogPostId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
